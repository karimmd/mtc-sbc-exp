version: '3.8'

networks:
  blockchain-network:
    driver: bridge

volumes:
  orderer.local:
  peer0.cloud.local:
  peer0.fog.local:
  peer0.edge.local:
  ca.local:

services:
  # Certificate Authority
  ca.local:
    image: hyperledger/fabric-ca:2.5
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.local
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_PORT=7054
      - FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:17054
    ports:
      - "7054:7054"
      - "17054:17054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ca.local:/etc/hyperledger/fabric-ca-server
    container_name: ca.local
    networks:
      - blockchain-network

  # Orderer with BFT-Smart integration
  orderer.local:
    image: hyperledger/fabric-orderer:2.5
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=none
      - ORDERER_CHANNELPARTICIPATION_ENABLED=true
      - ORDERER_ADMIN_TLS_ENABLED=true
      - ORDERER_ADMIN_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_ADMIN_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_ADMIN_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_TLS_CLIENTROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_LISTENADDRESS=0.0.0.0:7053
      - ORDERER_OPERATIONS_LISTENADDRESS=orderer.local:9443
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /root
    command: orderer
    volumes:
      - ./fabric-samples/config/:/etc/hyperledger/configtx
      - ./fabric-samples/organizations/ordererOrganizations/local/orderers/orderer.local/msp:/var/hyperledger/orderer/msp
      - ./fabric-samples/organizations/ordererOrganizations/local/orderers/orderer.local/tls/:/var/hyperledger/orderer/tls
      - orderer.local:/var/hyperledger/production/orderer
      - ./fabric-samples/bft-smart-integration/:/opt/bft-smart/
    ports:
      - "7050:7050"
      - "7053:7053"
      - "9443:9443"
    networks:
      - blockchain-network

  # Cloud Tier Peer
  peer0.cloud.local:
    image: hyperledger/fabric-peer:2.5
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/peercfg
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.cloud.local
      - CORE_PEER_ADDRESS=peer0.cloud.local:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.cloud.local:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.cloud.local:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.cloud.local:7051
      - CORE_PEER_LOCALMSPID=CloudMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_OPERATIONS_LISTENADDRESS=peer0.cloud.local:9444
      - CORE_METRICS_PROVIDER=prometheus
      - CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG={"peername":"peer0cloud"}
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s
    volumes:
      - ./fabric-samples/organizations/peerOrganizations/cloud.local/peers/peer0.cloud.local:/etc/hyperledger/fabric
      - peer0.cloud.local:/var/hyperledger/production
      - ./fabric-samples/peercfg:/etc/hyperledger/peercfg
    working_dir: /root
    command: peer node start
    ports:
      - "7051:7051"
      - "9444:9444"
    networks:
      - blockchain-network

  # Fog Tier Peer
  peer0.fog.local:
    image: hyperledger/fabric-peer:2.5
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/peercfg
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.fog.local
      - CORE_PEER_ADDRESS=peer0.fog.local:9051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:9051
      - CORE_PEER_CHAINCODEADDRESS=peer0.fog.local:9052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:9052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.fog.local:9051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.fog.local:9051
      - CORE_PEER_LOCALMSPID=FogMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_OPERATIONS_LISTENADDRESS=peer0.fog.local:9445
      - CORE_METRICS_PROVIDER=prometheus
      - CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG={"peername":"peer0fog"}
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s
    volumes:
      - ./fabric-samples/organizations/peerOrganizations/fog.local/peers/peer0.fog.local:/etc/hyperledger/fabric
      - peer0.fog.local:/var/hyperledger/production
      - ./fabric-samples/peercfg:/etc/hyperledger/peercfg
    working_dir: /root
    command: peer node start
    ports:
      - "9051:9051"
      - "9445:9445"
    networks:
      - blockchain-network

  # Edge Tier Peer
  peer0.edge.local:
    image: hyperledger/fabric-peer:2.5
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/peercfg
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.edge.local
      - CORE_PEER_ADDRESS=peer0.edge.local:11051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:11051
      - CORE_PEER_CHAINCODEADDRESS=peer0.edge.local:11052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:11052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.edge.local:11051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.edge.local:11051
      - CORE_PEER_LOCALMSPID=EdgeMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_OPERATIONS_LISTENADDRESS=peer0.edge.local:9446
      - CORE_METRICS_PROVIDER=prometheus
      - CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG={"peername":"peer0edge"}
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s
    volumes:
      - ./fabric-samples/organizations/peerOrganizations/edge.local/peers/peer0.edge.local:/etc/hyperledger/fabric
      - peer0.edge.local:/var/hyperledger/production
      - ./fabric-samples/peercfg:/etc/hyperledger/peercfg
    working_dir: /root
    command: peer node start
    ports:
      - "11051:11051"
      - "9446:9446"
    networks:
      - blockchain-network

  # Python Experimental Framework - Cloud Service Emulator
  blockchain-cloud-service:
    build: 
      context: .
      dockerfile: Dockerfile.python
    environment:
      - TIER=cloud
      - EMULATED_NODES=2
      - PEER_ENDPOINT=peer0.cloud.local:7051
      - FABRIC_NETWORK=blockchain-network
      - CA_ENDPOINT=ca.local:7054
      - FLASK_PORT=5000
      - CPU_CAPACITY=4.8  # GHz per core
      - MEMORY_CAPACITY=16384  # MB
    volumes:
      - ./src:/app/src
      - ./experiments:/app/experiments
      - ./fabric-samples/organizations:/app/crypto-config
    ports:
      - "5000:5000"
    depends_on:
      - peer0.cloud.local
      - ca.local
    networks:
      - blockchain-network

  # Python Experimental Framework - Fog Service Emulator
  blockchain-fog-service:
    build: 
      context: .
      dockerfile: Dockerfile.python
    environment:
      - TIER=fog
      - EMULATED_NODES=30
      - PEER_ENDPOINT=peer0.fog.local:9051
      - FABRIC_NETWORK=blockchain-network
      - CA_ENDPOINT=ca.local:7054
      - FLASK_PORT=5001
      - CPU_CAPACITY=2.4  # GHz per core
      - MEMORY_CAPACITY=8192  # MB
    volumes:
      - ./src:/app/src
      - ./experiments:/app/experiments
      - ./fabric-samples/organizations:/app/crypto-config
    ports:
      - "5001:5001"
    depends_on:
      - peer0.fog.local
    networks:
      - blockchain-network

  # Python Experimental Framework - Edge Service Emulator
  blockchain-edge-service:
    build: 
      context: .
      dockerfile: Dockerfile.python
    environment:
      - TIER=edge
      - EMULATED_NODES=500
      - PEER_ENDPOINT=peer0.edge.local:11051
      - FABRIC_NETWORK=blockchain-network
      - CA_ENDPOINT=ca.local:7054
      - FLASK_PORT=5002
      - CPU_CAPACITY=1.2  # GHz per core (resource-constrained)
      - MEMORY_CAPACITY=2048  # MB
    volumes:
      - ./src:/app/src
      - ./experiments:/app/experiments
      - ./fabric-samples/organizations:/app/crypto-config
    ports:
      - "5002:5002"
    depends_on:
      - peer0.edge.local
    networks:
      - blockchain-network

  # Experimental Controller (Main Python Service)
  blockchain-controller:
    build: 
      context: .
      dockerfile: Dockerfile.python
    environment:
      - ROLE=controller
      - FABRIC_NETWORK=blockchain-network
      - CLOUD_SERVICE=blockchain-cloud-service:5000
      - FOG_SERVICE=blockchain-fog-service:5001
      - EDGE_SERVICE=blockchain-edge-service:5002
      - ORDERER_ENDPOINT=orderer.local:7050
    volumes:
      - ./src:/app/src
      - ./experiments:/app/experiments
      - ./results:/app/results
      - ./fabric-samples/organizations:/app/crypto-config
      - ./scripts:/app/scripts
    ports:
      - "8080:8080"
    depends_on:
      - blockchain-cloud-service
      - blockchain-fog-service
      - blockchain-edge-service
      - orderer.local
    command: python /app/experiments/integrated_evaluation.py
    networks:
      - blockchain-network